networks:
  dev:
    driver: bridge

volumes:
  db-data: {}
  shared-volume: {}
  redis-data: {}
  minio_data:
    driver: local

services:
  controllers:  
    image: ${DOCKER_REGISTRY-}controllers
    container_name: api-dev
    build:
      context: .
      dockerfile: Controllers/Dockerfile
    volumes:
      - shared-volume:/shared/volume
      - ./logs:/app/logs
    depends_on:
      postgis:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};
      - Redis__Host=${REDIS_HOST}
      - Redis__Port=${REDIS_PORT}
      - Mail__Host=mailpit
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_HTTP_PORTS=8080
      - MinIO__Endpoint-minio:9000 #jak zmienicie port api to tu też trzeba zmenić
      - MinIO__AccessKey=${MINIO_ROOT_USER}
      - MinIO__SecretKey=${MINIO_ROOT_PASSWORD}
      - MinIO__UseSsl=false
    ports:
      - "${API_PORT}:8080"
    networks:
      - dev

  tests:
    build:
      context: .
      dockerfile: Tests/Dockerfile
    container_name: tests
    depends_on:
      - postgis
      - redis
    environment:
      - ConnectionStrings__DefaultConnection=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Host=postgis;Port=${POSTGRES_PORT};Database=${POSTGRES_DB};
      - Redis__Host=${REDIS_HOST}
      - Redis__Port=${REDIS_PORT}
      - ASPNETCORE_ENVIRONMENT=Test
    volumes:
      - shared-volume:/shared/volume
    networks: 
      - dev
    stdin_open: true
    tty: true

  postgis:
    image: postgis/postgis:17-3.5
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -h ${POSTGRES_HOST} -d ${POSTGRES_DB}",
        ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - dev
    restart: unless-stopped

  mailpit:
    image: axllent/mailpit:v1.27.9
    container_name: mailpit-dev
    ports:
      - ${MAILPIT_PORT:-63854}:8025
      - "1025:1025"
    networks:
      - dev
    restart: unless-stopped

  redis:
    image: redis:8.2
    container_name: redis-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - ${REDIS_PORT:-63852}:6379
    volumes:
      - redis-data:/data
    networks:
      - dev
    restart: unless-stopped

  web:
    image: nginx
    container_name: nginx-dev
    volumes:
      - ./templates:/etc/nginx/templates
    ports:
      - "${NGINX_PORT}:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    restart: unless-stopped

  client:
    build:
      context: ./Client
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
    ports:
      - "4000:4000"
    volumes:
      - ./Client:/app
      - /app/node_modules
      - shared-volume:/shared/volume
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    networks:
      - dev
  
  minio:
   image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
   container_name: minio
   ports:
     - "${MINIO_API_PORT:-9000}:9000"
     - "${MINIO_UI_PORT:-9001}:9001"
   environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: "http://localhost:9000" #jak zmienicie port dla api to tu też trzeba
      MINIO_BROWSER_REDIRECT_URL: "http://localhost:9001" #jak zmienicie port dla ui to tu też trzeba
   volumes:
     - minio_data:/data
   command: server /data --console-address ":9001" #jak zmienicie port dla ui to tu też trzeba
   healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"] #jak zmienicie port dla api to tu też trzeba
     interval: 30s
     timeout: 20s
     retries: 3
   networks:
    - dev
   restart: unless-stopped  

  minio_init:
     image: minio/mc:latest
     container_name:  minio_init
     depends_on:
       minio:
         condition: service_healthy
     entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb minio/fuel-prices --ignore-existing;
      /usr/bin/mc anonymous set download minio/fuel-prices;
      exit 0;
      "
     networks:
      - dev  
       
    